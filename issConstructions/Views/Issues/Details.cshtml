@model issDomain.Models.Issues

@{
    ViewBag.Title = "Details";
}

<style>
    #AccountGroupMaster {
        font-family: Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

    .btn-default {
        background-color: #FF5F04;
        color: white;
    }

    #AccountGroupMaster td, #customers th {
        border: 1px solid #ddd;
        padding: 8px;
    }

    #AccountGroupMaster tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    #AccountGroupMaster tr:hover {
        background-color: #ddd;
    }

    #AccountGroupMaster th {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: center;
    }

    #btn-edit a:hover {
        text-decoration: none;
        color: black;
    }

    #btn-edit a {
        text-decoration: none;
        color: black;
    }

    .header {
        margin-top: 10px;
        border-top-style: solid;
        border-top-width: 5px;
        border-top-color: #FF5F04;
        font-family: Calibri;
        font-size: 22px;
    }
</style>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

<div class="panel-group">
    <div class="panel panel-heading header">
        Issues -  Details Page
    </div>
    <div class="panel panel-body">

        <table id="AccountGroupMaster">
            <tr>
                <th>Issue ID</th>
                <td>  @Html.DisplayFor(model => model.IssueID) </td>
            </tr>
            <tr>
                <th>Issue Date</th>
                <td>  @Html.DisplayFor(model => model.IssuesDate) </td>
            </tr>
            <tr>
                <th>From Location</th>
                <td> @Html.DisplayFor(model => model.GName.godownName) </td>
            </tr>
            <tr>
                <th>To Location</th>
                <td> @Html.DisplayFor(model => model.SName.SiteName) </td>
            </tr>
            <tr>
                <th>Project Name</th>
                <td> @Html.DisplayFor(model => model.SiteName.ProjectName ) </td>
            </tr>
            <tr>
                <th>Site Name</th>
                <td> @Html.DisplayFor(model => model.SiteName.SiteName) </td>
            </tr>
            <tr>
                <th>Site Address</th>
                <td> @Html.DisplayFor(model => model.SiteName.SiteAddress) </td>
            </tr>
            <tr>
                <th>Net Amount</th>
                <td> @Html.DisplayFor(model => model.netAmount) </td>
            </tr>

        </table>
        <br />
        <div class="">
            <table id="tblpurchase" class="table-bordered" style="width:95%;text-align:center">
                <thead>
                    <tr>
                        <th>Sl.No</th>
                        <th>Category Name</th>
                        <th>Item Name</th>
                        <th>Rate Of Tax</th>
                        <th>Description</th>
                        <th>Rate</th>
                        <th>Quantity</th>
                        <th>Amount</th>
                        <th>Tax Amount</th>
                        <th>Total Amount</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="tblPurchaseRequest"></tbody>
            </table>
        </div>

        <p style="float:right;">

            @Html.ActionLink("Edit Item", "Index", "IssueTables", new { id = Model.IssueID }, htmlAttributes: new { @class = "btn btn-default" })
            @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-default" })
        </p>
    </div>
</div>

<script>
    var lstItems = [];
    $(document).ready(function ()
    {
            debugger
            let id =@Model.ID;
            get(id);

            function get(id) {
                $.ajax({
                    url: '@Url.Content("~/Issues/getListOfPurchaes")',
                    type: 'POST',
                    dataType: 'json',
                    data: { invoice: id },
                    success: function (result) {
                        $('#tblPurchaseRequest').empty();
                        console.log(result)
                        var row = "";
                        if (result != null && result!="data")
                        {
                            debugger
                            let sNo = 1;
                            for (var i = 0; i < result.length; i++)
                            {
                                let list = {};
                                list.CategoryText = result[i].Category.CategoryName;
                               // list.productId = result[i].product.ProductName;
                                list.productText = result[i].ProductName;
                                list.issueid = result[i].issueid ;
                                list.Id = result[i].ID;
                              //  list.categoryId =result[i].category.categoryName;                                
                                list.Description = result[i].Description;
                                list.Tax = result[i].Tax;
                                list.Rate = result[i].Rate;
                                list.Quantity = result[i].Quantity;
                                list.Amount = result[i].Amount;
                                list.TaxAmount = result[i].TaxAmount;
                                list.TotalAmount = result[i].TotalAmount;
                                list.ProductNo = result[i].ProductNo;

                                list.sNo = sNo;
                                lstItems.push(list);
                                row = `<tr>`
                                row +=    `<td>${sNo}</td>`
                                row += `<td>${result[i].Category.CategoryName}</td>`
                                row += `<td>${result[i].Product.ProductName}</td>`
                                row +=    `<td>${result[i].Tax}</td>`
                                row += `<td>${result[i].Description}</td>`
                                row += `<td>${result[i].Rate}</td>`
                                row += `<td>${result[i].Quantity}</td>`
                                row +=     `<td>${result[i].Amount}</td>`
                                row += `<td>${result[i].TaxAmount}</td>`
                                row += `<td>${result[i].TotalAmount}</td>`
                                row += `<td>

                        <button type="button" class="btn btn-default" onclick="removeTR('${result[i].ID}')">Remove</button>
                        </td>`
                                row +=     `</tr>`;
                                sNo++;
                                $('#tblPurchaseRequest').append(row);
                            }

                        }

                    }
                });
        }


    });
    
    $(document).ready(function ()
    {

        $("#TypeId").change(function () {
            var TypeName = $(this).find('option:selected').val();
            TypeId(TypeName);
        })

        $("#ProjectId").change(function () {
            var projectSite = $(this).find('option:selected').val();
            SiteId(projectSite);
        })

        $("#Category").change(function () {
            var categoryName = $(this).find('option:selected').val();
            ProductVal(categoryName);
        })

        $("#Product").change(function () {
            var taxAmount = $(this).find('option:selected').val();
            TaxId(taxAmount);
        })

        $("#Quantity").blur(function ()
        {
            debugger
            var productrate = $('#ItemRate').val();
            var amt = $('#Quantity').val() * productrate;
            $("#Amount").val(amt);


            if ($('#Amount').val() != '') {
                //tax calcualtion
                var taxper = $("#TaxId").val();
                var taxtotal = (taxper / 100) * amt;

                //total calculation
                var totalamount = amt + taxtotal;
                $("#TaxAmt").val(taxtotal);
                $("#TotalAmt").val(totalamount);
            }

        })

    });

    $('#myModal').on('show.bs.modal', function (e) {
        $('body').addClass("example-open");
    }).on('hide.bs.modal', function (e) {
        $('body').removeClass("example-open");
    });

     function SiteId(projectSite)
     {
         debugger
              $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Issues/SiteId")',
            dataType: 'json',
                  data: { site_NameId: projectSite },
                  success: function (result) {
                      var data = result;
                      $("#SiteId").empty();
                      $("#SiteAddressId").empty();

                      for (var i = 0; i < data.length; i++)
                      {
                          $("#SiteId").append("<option value='" + data[i].ID + "'>" + data[i].SiteName + "</option>");
                          $("#SiteAddressId").append("<option value='" + data[i].ID + "'>" + data[i].SiteAddress + "</option>");

                }
            },
            error: function (err) {
                console.log(err);
            }
        });
    };


    function ProductVal(categoryName)
    {
        debugger
              $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Issues/ProductVal")',
                  dataType: 'json',
                  data: { category: categoryName },
                  success: function (result) {
                      var data = result;
                      $("#Product").empty();
                      var op = "";
                      op = "<option>---Please select ---</option>";
                      for (var i = 0; i < data.length; i++)
                      {
                          op += "<option value=" + data[i].ProductName + ">" + data[i].ProductName + "</option>";
                      }
                      $("#Product").append(op);

                  },
                  error: function (err)
                  {
                console.log(err);
                  }
              });
    };

     function TaxId(taxAmount)
    {
              $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Issues/TaxId")',
                  dataType: 'json',
                  data: { tax_Amount: taxAmount },
                  success: function (result) {
                     var data = result;
                      $("#TaxId").empty();
                      for (var i = 0; i < data.length; i++)
                      {
                    $("#TaxId").val(data[i].Tax)
                      }
                  },
                  error: function (err)
                  {
                console.log(err);
                  }
              });
    };

      function TypeId(TypeName)
    {
              $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Issues/TypeId")',
                  dataType: 'json',
                  data: { type_name: TypeName},
                  success: function (result) {
                     var data = result;
                      $("#TypeId").empty();
                      for (var i = 0; i < data.length; i++)
                      {
                    $("#TypeId").val(data[i].TypeName)
                      }
                  },
                  error: function (err)
                  {
                console.log(err);
                  }
              });
    };

    $('#btnSave').click(function ()
    {
        debugger
        let list = {};

         list.CategoryId = $('#Category').val();
         list.productId = $('#Product').val();
         list.productText = $('#Product option:selected').text();
         list.CategoryText = $('#Category option:selected').text();
         list.Description = $('#Description').val();
         list.Tax = $('#TaxId').val();
         list.Rate = $('#ItemRate').val();
         list.Quantity = $('#Quantity').val();
         list.Amount = $('#Amount').val();
         list.TaxAmount = $('#TaxAmt').val();;
         list.TotalAmount = $('#TotalAmt').val();;

        list.sNo = sNo;

        $.ajax({
                url: '@Url.Content("~/Issues/savePurchages")',
                type: 'POST',
                  dataType: 'json',
            data: { issueTable: list },
                success: function (result)
                {
                    debugger
                    console.log(result);
                    list.Id = result;
                    lstItems.push(list);
                    console.log(lstItems);
                    bindItems();
                    $('#product').val(0);
                    $('#Category').val(0);
                    $('#Description').val('');
                    $('#ItemRate').val('');
                    $('#Quantity').val('');
                    $('#TaxId').val('');
                    $('#Amount').val('');
                    $('#TaxAmt').val('');
                    $('#TotalAmt').val('');
                    $('#gstAmount').val('');
            },

            error: function (err) {
                console.log(err);
            }
        });
    });

    function bindItems() {
        $('#tblpurchaserequest').empty();
        if (lstItems.length > 0) {
            debugger
            let sNo = 1;
            let grandTotal = 0;
            // let calProPer = 0;
            for (var i = 0; i < lstItems.length; i++) {
                var row = `<tr id=rm${sNo}>`
                    + `<td>${sNo}</td>`
                    + `<td>${lstItems[i].productText}</td>`
                    + `<td>${lstItems[i].CategoryText}</td>`
                    + `<td>${lstItems[i].Tax}</td>`
                    + `<td>${lstItems[i].Description}</td>`
                    + `<td>${lstItems[i].Rate}</td>`
                    + `<td>${lstItems[i].Quantity}</td>`
                    + `<td>${lstItems[i].Amount}</td>`
                    + `<td>${lstItems[i].TaxAmount}</td>`
                    + `<td>${lstItems[i].TotalAmount}</td>`
                    + `<td>

                        <button type="button" class="btn btn-default" onclick="removeTR('${lstItems[i].Id}')">Remove</button>
                        </td>`
                    + "</tr>";

                let amount = 0;



                lstItems[i].TotalAmount != null ? amount = parseFloat(lstItems[i].TotalAmount) : amount = 0;
                grandTotal += amount;

                $('#tblpurchaserequest').append(row);
                sNo++;
            }
            console.log(grandTotal);
            $('#netAmt').val(grandTotal.toFixed());
        }
    }
</script>

@*<!DOCTYPE html>

    <html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>Create</title>
    </head>
    <body>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Issues</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.IssuesDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IssuesDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IssuesDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProjectId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SiteId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SiteId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SiteId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SiteAddressId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SiteAddressId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SiteAddressId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.netAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.netAmount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.netAmount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.isDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.isDeleted)
                            @Html.ValidationMessageFor(model => model.isDeleted, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UpdateBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UpdateBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UpdateBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UpdatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UpdatedDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UpdatedDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </body>
    </html>*@
