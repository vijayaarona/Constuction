@model issDomain.Models.PurchaseOrder

@{
    ViewBag.Title = "Create";
}


<style>
    .header {
        margin-top: 10px;
        border-top-style: solid;
        border-top-width: 5px;
        border-top-color: #FF5F04;
        font-family: Calibri;
        font-size: 22px;
    }

    .btn-default {
        background-color: #FF5F04;
        color: white;
    }

    input, select, textarea {
        max-width: 500px;
    }

    th, td {
        border: 1px solid black;
        text-align: center;
        height: 50px;
    }

    .itemtable th {
        text-align: center;
    }

    select #Product, #TaxId {
        max-width: 500px;
    }

    .example-open .modal-backdrop {
        background-color: transparent;
    }
</style>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>


<link rel="stylesheet" type="text/css" href=@Url.Content("https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css")>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="panel-group">
        <div class="panel panel-heading header" style="margin-top: 10px;border-top-style: solid;border-top-width: 5px;border-top-color: #FF5F04;font-family: Calibri;font-size: 22px;">
            Purchase Order - Add Page
        </div>
        <div class="panel panel-body" style="overflow:auto">
            <div class="row">
                <div class="form-group col-md-6">
                    <label>Request ID</label>
                    @Html.DropDownList("RequestID", null, htmlAttributes: new { @class = "js-states form-control", @id = "purchaseRequestId" })
                    @Html.ValidationMessageFor(model => model.RequestID, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Order Date</label>
                    @Html.TextBoxFor(m => m.OrderDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", id = "orderDate" })
                </div>
                <div class="form-group col-md-6">
                    <label>Category</label>
                    @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control", @id = "categoryId" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Supplier Name</label>
                    @Html.DropDownList("SupplierId", null, htmlAttributes: new { @class = "form-control", @id = "SupplierId" })
                    @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Supplier Address</label>
                    @Html.DropDownList("SupplierAddressId", null, htmlAttributes: new { @class = "form-control", @id = "SupplierAddressId" })
                    @Html.ValidationMessageFor(model => model.SupplierAddressId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Project Name</label>
                    @Html.DropDownList("SiteNameId", null, htmlAttributes: new { @class = "form-control", @id = "ProjectId" })
                    @Html.ValidationMessageFor(model => model.SiteNameId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Site Name</label>
                    @Html.DropDownList("SiteId", null, htmlAttributes: new { @class = "form-control", @id = "SiteId" })
                    @Html.ValidationMessageFor(model => model.SiteId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Site Address</label>
                    @Html.DropDownList("SiteAddressId", null, htmlAttributes: new { @class = "form-control", @id = "SiteAddressId" })
                    @Html.ValidationMessageFor(model => model.SiteAddressId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Mobile No</label>
                    @Html.EditorFor(model => model.mobileno, new { htmlAttributes = new { @class = "form-control", @id = "mobileno" } })
                    @Html.ValidationMessageFor(model => model.mobileno, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6" hidden>
                    <label>Product No</label>
                    @Html.EditorFor(model => model.ProductNo, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.ProductNo } })
                    @Html.ValidationMessageFor(model => model.ProductNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <button type="button" style="float:right" class="btn btn-default" data-toggle="modal" data-target="#myModal">Add Item</button>
            <br /><br />
            <div class="itemtable">
                <div class="itemtable">
                    <table class="create" style="width:100%">
                        <thead>
                            <tr>
                                <th>Sl.No</th>
                                <th>Item Name</th>
                                <th>Rate Of Tax</th>
                                <th>Description</th>
                                <th>Rate</th>
                                <th>Quantity</th>
                                <th>Amount</th>
                                <th>Discount Amount</th>
                                <th>Tax Amount</th>
                                <th>Total Amount</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="tblpurchaserequest"></tbody>
                    </table>
                </div>
            </div>
            <!-- Modal -->
            <div class="modal fade" id="myModal" role="dialog">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content" style="background-color:#ebcece">
                        <div class="modal-body">
                            <div class="panel-group">
                                <div class="panel panel-heading header" style="margin-top: 10px;border-top-style: solid;border-top-width: 5px;border-top-color: #FF5F04;font-family: Calibri;font-size: 22px;">
                                    Add Item
                                </div>
                                <div class="panel panel-body" style="font-size:15px;font-family:Calibri">
                                    <div class="row">
                                        <form action="createitem">
                                            <div class="form-group col-md-6">
                                                <label>Product Name</label><br />
                                                <select id="Product" name="" style="width:352px; height:27px">
                                                    <option value="0">Please Select</option>
                                                    @foreach (var item in @ViewBag.productId)
                                                    {
                                                        <option value="@item.Value">@item.Text</option>
                                                    }
                                                </select>
                                            </div>
                                            <div class="form-group col-md-6">
                                                <label style="width:352px; height:27px">Rate of Tax</label><br />
                                                <input type="text" readonly="readonly" id="TaxId" name="description" size="50" />
                                            </div>
                                            <div class="form-group col-md-6" style="min-height:58px">
                                                <label style="width:352px; height:27px">Description</label><br />
                                                <input type="text" id="Description" name="description" size="50" />
                                            </div>
                                            <div class="form-group col-md-6">
                                                <label style="width:352px; height:27px">Rate</label><br />
                                                <input type="text" id="Rate" name="Rate" size="50" />
                                            </div>
                                            <div class="form-group col-md-6">
                                                <label style="width:352px; height:27px">Quantity</label><br />
                                                <input type="text" id="Quantity" name="Quantity" size="50" />
                                            </div>
                                            <div class="form-group col-md-6">
                                                <label style="width:352px; height:27px">Discount Percent</label><br />
                                                <input type="text" id="discountPercent" name="discountPercent" size="50" />
                                            </div>
                                            <div class="form-group col-md-6">
                                                <label style="width:352px; height:27px">Amount</label><br />
                                                <input type="text" readonly="readonly" id="Amount" name="Amount" size="50" />
                                            </div>

                                            <div class="form-group col-md-6">
                                                <label style="width:352px; height:27px">Discount Amount</label><br />
                                                <input type="text" id="discountAmount" name="discountAmount" size="50" />
                                            </div>
                                            <div class="form-group col-md-6">
                                                <label style="width:352px; height:27px">Tax Amount</label><br />
                                                <input type="text" id="TaxAmt" name="TaxAmt" size="50" />
                                            </div>
                                            <div class="form-group col-md-6">
                                                <label style="width:352px; height:27px">Total Amount</label><br />
                                                <input type="text" id="TotalAmt" readonly="readonly" name="TotalAmt" size="50" />
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-save="modal" id="btnSave" data-dismiss="modal">Add</button>
                                <button type="button" class="btn btn-default" data-dismiss="modal" id="btnCancel()">Close</button>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="form-group col-md-2">
                    <label>Total Amount: </label>
                </div>
                <div class="form-group col-md-3">
                    @Html.EditorFor(model => model.TotAmount, new { htmlAttributes = new { @class = "form-control", @id = "ProTotal" } })
                    @Html.ValidationMessageFor(model => model.TotAmount, "", new { @class = "text-danger" })
                    @*<input type="text" id="ProGrandTotal" name="ProGrandTotal" size="50" />*@
                </div>
                @*<label id="ProGrandTotal"></label>*@
            </div>
            <div class="row">
                <div class="form-group col-md-2">
                    <label>Discount(%): </label>
                </div>
                <div class="form-group col-md-3">
                    @Html.EditorFor(model => model.discountPercentage, new { htmlAttributes = new { @class = "form-control", @id = "disPercent" } })
                    @Html.ValidationMessageFor(model => model.discountPercentage, "", new { @class = "text-danger" })
                    @*<input type="text" id="disPercent" name="disPercent" size="50" />*@
                </div>
                @*<label id="disPercent"></label>*@
            </div>
            <div class="row">
                <div class="form-group col-md-2">
                    <label>Discount Amount : </label>
                </div>
                <div class="form-group col-md-3">
                    @Html.EditorFor(model => model.dicountAmount, new { htmlAttributes = new { @class = "form-control", @id = "disAmount" } })
                    @Html.ValidationMessageFor(model => model.dicountAmount, "", new { @class = "text-danger" })
                    @*<input type="text" id="disAmount" name="disAmount" size="50" />*@
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-2">
                    <label>Grand Total : </label>
                </div>
                <div class="form-group col-md-3">
                    @Html.EditorFor(model => model.grandTotal, new { htmlAttributes = new { @class = "form-control", @id = "ProGrandTotal" } })
                    @Html.ValidationMessageFor(model => model.grandTotal, "", new { @class = "text-danger" })
                    @*<input type="text" id="disAmount" name="disAmount" size="50" />*@
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-2">
                    <label>Tax (%) : </label>
                </div>
                <div class="form-group col-md-3">
                    @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control", @id = "TaxP" } })
                    @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
                    @*<input type="text" id="disAmount" name="disAmount" size="50" />*@
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-2">
                    <label>Tax Amount : </label>
                </div>
                <div class="form-group col-md-3">
                    @Html.EditorFor(model => model.TotTax, new { htmlAttributes = new { @class = "form-control", @id = "TaxPamt" } })
                    @Html.ValidationMessageFor(model => model.TotTax, "", new { @class = "text-danger" })
                    @*<input type="text" id="disAmount" name="disAmount" size="50" />*@
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-2">
                    <label>Net Amount : </label>
                    @*<label id="netAmt"></label>*@
                </div>
                <div class="form-group col-md-3">
                    @Html.EditorFor(model => model.NetAmount, new { htmlAttributes = new { @class = "form-control", @id = "netAmt" } })
                    @Html.ValidationMessageFor(model => model.NetAmount, "", new { @class = "text-danger" })
                    @*<input type="text" id="netAmt" name="netAmt" size="50" />*@
                </div>
            </div>

            <div class="form-group" style="float:right">
                <input type="submit" value="Submit" class="btn btn-default" />
                @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src=@Url.Content("https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js")></script>


<script>
    let sNo = 1;
    var lstItems = [];
    var ntAmt;
    $(document).ready(function ()
    {
        $("#purchaseRequestId").select2();
        $("#purchaseRequestId").change(function () {
            var requestId = $(this).find('option:selected').val();
            purchaseReqOrders(requestId);
        })
        $("#categoryId").change(function ()
        {
            var supNameId = $(this).find('option:selected').val();
            SupplierId(supNameId);
        })
        $("#SupplierId").change(function ()
        {
            var supAddressId = $(this).find('option:selected').val();
            SupplierAddressId(supAddressId);
        })
        $("#ProjectId").change(function ()
        {
            var projectSite = $(this).find('option:selected').val();
            SiteId(projectSite);
        })
        $("#Product").change(function () {
            var taxAmount = $(this).find('option:selected').val();
            TaxId(taxAmount);
        })


        $("#discountPercent").blur(function ()
        {

            var productRate = parseFloat($('#Rate').val());
            var Amt = parseFloat($('#Quantity').val() * productRate);
            $("#Amount").val(Amt.toFixed(2));

            //Discount Calculation
            var productDisPer = parseFloat($('#discountPercent').val());

            var disAmt = parseFloat((productDisPer / 100) * Amt);
            $('#discountAmount').val(disAmt.toFixed(2));

            var productAmount = parseFloat(Amt - disAmt);

            if ($('#discountPercent').val() != '')
            {
                //Tax Calcualtion
                var TaxPer = $("#TaxId").val();
                var taxTotal = parseFloat((TaxPer / 100) * productAmount);

                //Total Calculation
                var totalAmount = parseFloat(productAmount + taxTotal);
                $("#TaxAmt").val(taxTotal.toFixed(2));
                $("#TotalAmt").val(totalAmount.toFixed(2));
            }

        })

    });

    $(document).keydown(function (event) {
        if (event.altKey && event.which === 65) {
            $('#myModal').modal('show');
        }
    });
    $('#myModal').on('show.bs.modal', function (e)
    {
        $('body').addClass("example-open");
    }).on('hide.bs.modal', function (e) {
        $('body').removeClass("example-open");
    })

    function purchaseReqOrders(requestId)
    {
        debugger
        $('#tblpurchaserequest').empty();
              $.ajax({
            type: 'POST',
            url: '@Url.Content("~/PurchaseOrders/purchaseReqOrders")',
            dataType: 'json',
                  data: { purchaseRequestOrderId: requestId },
                  success: function (result) {

                      console.log(result)
                      var data = result.res;

                      $('#categoryId option[value=' + data.CategoryId + ']').attr("selected", "selected");
                      $('#SupplierId option[value=' + data.SupplierId + ']').attr("selected", "selected");
                      $('#SupplierAddressId option[value=' + data.SupplierAddressId + ']').attr("selected", "selected");
                      $('#ProjectId option[value=' + data.SiteNameId  + ']').attr("selected", "selected");
                      $('#SiteId option[value=' + data.SiteId + ']').attr("selected", "selected");
                      $('#SiteAddressId option[value=' + data.SiteAddressId + ']').attr("selected", "selected");

                      $("#mobileno").val(data.mobileno);
                      $("#ProTotal").val(data.TotAmount);
                      $("#disPercent").val(data.discountPercentage);
                      $("#disAmount").val(data.dicountAmount);
                      $("#ProGrandTotal").val(data.grandTotal);
                      $("#TaxP").val(data.Tax);
                      $("#TaxPamt").val(data.TotTax);
                      $("#netAmt").val(data.NetAmount);
                      $("#orderDate").val(data.orderDate);

                      var row = "";
                      debugger
                      if (result != null && result != "data") {

                          let sNo = 1;
                          for (var i = 0; i < result.req.length; i++) {
                              let list = {};
                              list.productId = result.req[i].Product.ProductName;
                              list.productText = result.req[i].Product.ProductName;
                              list.purchaseRequestId = result.req[i].purchaseRequestId;
                              list.Id = result.req[i].ID;
                              list.Description = result.req[i].Description;
                              list.Tax = result.req[i].Tax;
                              list.Rate = result.req[i].Rate;
                              list.Quantity = result.req[i].Quantity;
                              list.Amount = result.req[i].Amount;
                              list.discountPercent = result.req[i].discountPercent;
                              list.discountAmount = result.req[i].discountAmount;
                              list.TaxAmount = result.req[i].TaxAmount;
                              list.TotalAmount = result.req[i].TotalAmount;
                              list.ProductNo = result.req[i].ProductNo;

                              list.sNo = sNo;
                              lstItems.push(list);
                              row = `<tr>`
                              row += `<td>${sNo}</td>`
                              row += `<td>${result.req[i].Product.ProductName}</td>`
                              row += `<td>${result.req[i].Tax}</td>`
                              row += `<td>${result.req[i].Description}</td>`
                              row += `<td>${result.req[i].Rate}</td>`
                              row += `<td>${result.req[i].Quantity}</td>`
                              row += `<td>${result.req[i].Amount}</td>`
                              row += `<td>${result.req[i].discountAmount}</td>`
                              row += `<td>${result.req[i].TaxAmount}</td>`
                              row += `<td>${result.req[i].TotalAmount}</td>`
                              row += `<td>

                        <button type="button" class="btn btn-default" onclick="removeTR('${result.req[i].ID}')">Remove</button>
                        </td>`
                              row += `</tr>`;
                              sNo++;

                              $('#tblpurchaserequest').append(row);
                          }
                      }

                  },
                  error: function (err)
                  {
                console.log(err);
                  }
              });
    };

    function editBTN(item) {
        debugger
        var tempTR = $('#rm' + item).children();
        console.log(tempTR);

        var column = [9];
        for (var i = 0; i < tempTR.length; i++)
        {
           //console.log(tempTR[i].innerText);
            column[i] = tempTR[i].innerText;
           //Array for store the value
        }
        $('#myModal').modal('show');
        $("#Product option:contains(" + column[1] + ")").prop('selected', 'selected');
        $('#TaxId').val(column[2]);
        $('#Description').val(column[3]);
        $('#Rate').val(column[4]);
        $('#Quantity').val(column[5]);
        $('#Amount').val(column[6]);
        $('#discountAmount').val(column[7]);
        $('#TaxAmt').val(column[8]);
        $('#TotalAmt').val(column[9]);
        $('#btnSave').text("Update");

    }
    function SupplierId(supNameId)
    {
              $.ajax({
            type: 'POST',
            url: '@Url.Content("~/PurchaseOrders/SupplierId")',
            dataType: 'json',
                  data: { supplier_NameId: supNameId },
                  success: function (result)
                  {
                   var data = result;
                      $("#SupplierId").empty();

                for (var i = 0; i < data.length; i++) {
                    $("#SupplierId").append("<option value='" + data[i].ID + "'>" + data[i].Suppliername + "</option>");
                }
            },
            error: function (err) {
                console.log(err);
            }
        });
    };
    function SupplierAddressId(supAddressId)
    {
              $.ajax({
            type: 'POST',
            url: '@Url.Content("~/PurchaseOrders/SupplierAddressId")',
            dataType: 'json',
                  data: { supplier_AddressId: supAddressId },
                  success: function (result) {
                     var data = result;

                      $("#SupplierAddressId").empty();
                      for (var i = 0; i < data.length; i++)
                      {
                          $("#SupplierAddressId").append("<option value='" + data[i].ID + "'>" + data[i].address + "</option>");
                      }
                  },
                  error: function (err)
                  {
                console.log(err);
                  }
              });
    };
    function SiteId(projectSite)
    {
              $.ajax({
            type: 'POST',
            url: '@Url.Content("~/PurchaseOrders/SiteId")',
            dataType: 'json',
                  data: { site_NameId: projectSite },
                  success: function (result) {
                      var data = result;
                      $("#SiteId").empty();
                      $("#SiteAddressId").empty();
                      for (var i = 0; i < data.length; i++)
                      {
                    $("#SiteId").append("<option value='" + data[i].ID + "'>" + data[i].SiteName + "</option>");
                    $("#SiteAddressId").append("<option value='" + data[i].ID + "'>" + data[i].SiteAddress + "</option>");
                }
            },
            error: function (err) {
                console.log(err);
            }
        });
    };
     function TaxId(taxAmount)
    {
              $.ajax({
            type: 'POST',
            url: '@Url.Content("~/PurchaseOrders/TaxId")',
                  dataType: 'json',
                  data: { tax_Amount: taxAmount },
                  success: function (result) {
                     var data = result;
                      $("#TaxId").empty();
                      for (var i = 0; i < data.length; i++)
                      {
                    $("#TaxId").val(data[i].Tax)
                      }
                  },
                  error: function (err)
                  {
                console.log(err);
                  }
              });
    };

 $('#btnSave').click(function ()
    {
        debugger
        let list = {};
         list.productId = $('#Product').val();
         list.productText = $('#Product option:selected').text();
         list.purchaseRequestId = $('#RequestID').val();
         list.Description = $('#Description').val();
         list.Tax = $('#TaxId').val();
         list.Rate = $('#Rate').val();
         list.Quantity = $('#Quantity').val();
         list.Amount = $('#Amount').val();
         list.discountPercent = $('#discountPercent').val();
         list.discountAmount = $('#discountAmount').val();
         list.TaxAmount = $('#TaxAmt').val();;
         list.TotalAmount = $('#TotalAmt').val();;
         list.ProductNo = $('#ProductNo').val();;

        list.sNo = sNo;

        $.ajax({
                url: '@Url.Content("~/PurchaseOrders/savePurchages")',
                type: 'POST',
                  dataType: 'json',
            data: { PurchaseOrderTable: list },
                success: function (result)
                {
                    debugger
                    console.log(result);
                    list.Id = result;
                    lstItems.push(list);
                    console.log(lstItems);
                    bindItems();
                    $('#productId').val(0);
                    $('#Description').val('');
                    $('#Rate').val('');
                    $('#Quantity').val('');
                    $('#TaxId').val('');
                    $('#Amount').val('');
                    $('#TaxAmt').val('');
                    $('#TotalAmt').val('');
                    $('#discountAmount').val('');
                    $('#discountPercent').val('');
                    $('#gstAmount').val('');
                    $('#myModal').modal('show');
            },

            error: function (err) {
                console.log(err);
            }
        });
        //$('#myModal').modal('show');
    });

    function bindItems() {
        $('#tblpurchaserequest').empty();
        if (lstItems.length > 0) {
            debugger
            let sNo = 1;
            let grandTotal = 0;
           // let calProPer = 0;
            for (var i = 0; i < lstItems.length; i++)
            {
                var row = `<tr id=rm${sNo}>`
                   + `<td>${sNo}</td>`
                    + `<td>${lstItems[i].productText}</td>`
                    + `<td>${lstItems[i].Tax}</td>`
                    + `<td>${lstItems[i].Description}</td>`
                    + `<td>${lstItems[i].Rate}</td>`
                    + `<td>${lstItems[i].Quantity}</td>`
                    + `<td>${lstItems[i].Amount}</td>`
                    + `<td>${lstItems[i].discountAmount}</td>`
                    + `<td>${lstItems[i].TaxAmount}</td>`
                    + `<td>${lstItems[i].TotalAmount}</td>`
                    + `<td>

                        <button type="button" class="btn btn-default" onclick="removeTR('${lstItems[i].ID}')">Remove</button>
                        </td>`
                    + "</tr>";

                let amount = 0;



                lstItems[i].TotalAmount != null ? amount = parseFloat(lstItems[i].TotalAmount) : amount = 0;
                grandTotal += amount;

                $('#tblpurchaserequest').append(row);
                sNo++;
            }
            console.log(grandTotal);
            $('#ProTotal').val(grandTotal.toFixed());

            $("#disPercent").blur(function ()
            {
                debugger

                var disPercentage = $('#disPercent').val();
                var calProPer = parseFloat((disPercentage / 100) * grandTotal);
                $('#disAmount').val(calProPer.toFixed());
                var netAmount = parseFloat(grandTotal - calProPer);
                $('#netAmt').val(netAmount.toFixed());
                var TotAmt = parseFloat(grandTotal - calProPer);
                $('#ProGrandTotal').val(TotAmt.toFixed());
            });
            $("#TaxP").blur(function () {
                debugger
                var taxPercentage = $('#TaxP').val();
                var TotAmt = $('#ProGrandTotal').val();
                var calProPer1 = parseFloat((taxPercentage / 100) * TotAmt);
                $('#TaxPamt').val(calProPer1.toFixed());
                var NetAmount = parseFloat(TotAmt) + parseFloat(calProPer1);
                $('#netAmt').val(NetAmount.toFixed());
            });

        }
    }


    function removeTR(item)
    {
        debugger
        //let inNo = $('#ProductNo').val();
        let productId = $('#Product').val();
        $.ajax({
            url: '@Url.Content("~/PurchaseOrders/removePurchages")',
            type: 'POST',
            dataType: 'json',
            data: { Id: item, InNo: productId },
            success: function (result)
            {
                console.log(result);
                if (result != null)
                {
                    lstItems = result;
                    $('#tblpurchaserequest').empty();
                    if (lstItems.length > 0) {
                        debugger
                        let sNo = 1;
                        let grandTotal = 0;
                        for (var i = 0; i < lstItems.length; i++) {
                            var row = `<tr id=rm${sNo}>`
                                + `<td>${sNo}</td>`
                                + `<td>${lstItems[i].Product.ProductName}</td>`
                                + `<td>${lstItems[i].Tax}</td>`
                                + `<td>${lstItems[i].Description}</td>`
                                + `<td>${lstItems[i].Rate}</td>`
                                + `<td>${lstItems[i].Quantity}</td>`
                                + `<td>${lstItems[i].Amount}</td>`
                                + `<td>${lstItems[i].discountAmount}</td>`
                                + `<td>${lstItems[i].TaxAmount}</td>`
                                + `<td>${lstItems[i].TotalAmount}</td>`
                                + `<td>
                        <button type="button" class="btn btn-default" onclick="removeTR('${lstItems[i].ID}')">Remove</button>
                        </td>`
                                + "</tr>";
                            let amount = 0;

                            lstItems[i].TotalAmount != null ? amount = parseFloat(lstItems[i].TotalAmount) : amount = 0;
                            grandTotal += amount;

                            $('#tblpurchaserequest').append(row);
                            sNo++;
                        }
                        console.log(grandTotal);
                        $('#ProGrandTotal').val(grandTotal.toFixed());

                        $("#disPercent").blur(function () {
                            debugger

                            var disPercentage = $('#disPercent').val();
                            var calProPer = parseFloat((disPercentage / 100) * grandTotal);
                            $('#disAmount').val(calProPer.toFixed());
                            var netAmount = parseFloat(grandTotal - calProPer);
                            $('#netAmt').val(netAmount.toFixed());
                        });

                   }
                }
            }
        });
    };

</script>

