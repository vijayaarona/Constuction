@model issDomain.Models.IssueTable

@{
    ViewBag.Title = "Edit";
}

<style>
    .header {
        margin-top: 10px;
        border-top-style: solid;
        border-top-width: 5px;
        border-top-color: #FF5F04;
        font-family: Calibri;
        font-size: 22px;
    }

    .btn-default {
        background-color: #FF5F04;
        color: white;
    }

    input, select, textarea {
        max-width: 500px;
    }

    th, td {
        border: 1px solid black;
        text-align: center;
        height: 50px;
    }

    .itemtable th {
        text-align: center;
    }

    select #Product, #TaxId {
        max-width: 500px;
    }

    .example-open .modal-backdrop {
        background-color: transparent;
    }
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="panel-group">
        <div class="panel panel-heading header" style="margin-top: 10px;border-top-style: solid;border-top-width: 5px;border-top-color: #FF5F04;font-family: Calibri;font-size: 22px;">
            Purchase Order - Item Edit
        </div>
        <div class="panel panel-body" style="overflow:auto">
            <div class="row">
                <div class="form-group col-md-6">
                    <label>Purchase Request ID</label>
                    @Html.EditorFor(model => model.issueId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.issueId, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-6">
                    <label>Category Name</label>
                    @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-6">
                    <label>Product Name</label>
                    @Html.DropDownList("productId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.productId, "", new { @class = "text-danger" })

                </div>
                <div class="form-group col-md-6">
                    <label>Rate of Tax</label>
                    @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    <label>Description</label>
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Rate</label>
                    @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })

                </div>
                <div class="form-group col-md-6">
                    <label>Quantity</label>
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    <label>Amount</label>

                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-6">
                    <label>Tax Amount</label>
                    @Html.EditorFor(model => model.TaxAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TaxAmount, "", new { @class = "text-danger" })

                </div>


                <div class="form-group col-md-6">
                    <label>Total Amount</label>
                    @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })

                </div>

            </div>

        </div>
    </div>

    <p style="float:right;">
        <input type="submit" value="Save" class="btn btn-default" />
        @Html.ActionLink("Back", "Index", new { Id = @Model.issueId }, htmlAttributes: new { @class = "btn btn-default" })

    </p>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    let sNo = 1;
    var lstItems = [];
    var ntAmt;
    $(document).ready(function ()
    {

        $("#TypeId").change(function () {
            var TypeName = $(this).find('option:selected').val();
            TypeId(TypeName);
        })

        $("#ProjectId").change(function () {
            var projectSite = $(this).find('option:selected').val();
            SiteId(projectSite);
        })

        $("#Category").change(function () {
            var categoryName = $(this).find('option:selected').val();
            ProductVal(categoryName);
        })

        $("#Product").change(function () {
            var taxAmount = $(this).find('option:selected').val();
            TaxId(taxAmount);
        })

        $("#Quantity").blur(function ()
        {
            debugger
            var productrate = $('#ItemRate').val();
            var amt = $('#Quantity').val() * productrate;
            $("#Amount").val(amt);


            if ($('#Amount').val() != '') {
                //tax calcualtion
                var taxper = $("#TaxId").val();
                var taxtotal = (taxper / 100) * amt;

                //total calculation
                var totalamount = amt + taxtotal;
                $("#TaxAmt").val(taxtotal);
                $("#TotalAmt").val(totalamount);
            }

        })

    });

    $('#myModal').on('show.bs.modal', function (e) {
        $('body').addClass("example-open");
    }).on('hide.bs.modal', function (e) {
        $('body').removeClass("example-open");
    });

     function SiteId(projectSite)
     {
         debugger
              $.ajax({
            type: 'POST',
            url: '@Url.Content("~/IssueTables/SiteId")',
            dataType: 'json',
                  data: { site_NameId: projectSite },
                  success: function (result) {
                      var data = result;
                      $("#SiteId").empty();
                      $("#SiteAddressId").empty();

                      for (var i = 0; i < data.length; i++)
                      {
                          $("#SiteId").append("<option value='" + data[i].ID + "'>" + data[i].SiteName + "</option>");
                          $("#SiteAddressId").append("<option value='" + data[i].ID + "'>" + data[i].SiteAddress + "</option>");

                }
            },
            error: function (err) {
                console.log(err);
            }
        });
    };


    function ProductVal(categoryName)
    {
        debugger
              $.ajax({
            type: 'POST',
            url: '@Url.Content("~/IssueTables/ProductVal")',
                  dataType: 'json',
                  data: { category: categoryName },
                  success: function (result) {
                      var data = result;
                      $("#Product").empty();
                      var op = "";
                      op = "<option>---Please select ---</option>";
                      for (var i = 0; i < data.length; i++)
                      {
                          op += "<option value=" + data[i].ProductName + ">" + data[i].ProductName + "</option>";
                      }
                      $("#Product").append(op);

                  },
                  error: function (err)
                  {
                console.log(err);
                  }
              });
    };

     function TaxId(taxAmount)
    {
              $.ajax({
            type: 'POST',
            url: '@Url.Content("~/IssueTables/TaxId")',
                  dataType: 'json',
                  data: { tax_Amount: taxAmount },
                  success: function (result) {
                     var data = result;
                      $("#TaxId").empty();
                      for (var i = 0; i < data.length; i++)
                      {
                    $("#TaxId").val(data[i].Tax)
                      }
                  },
                  error: function (err)
                  {
                console.log(err);
                  }
              });
    };

      function TypeId(TypeName)
    {
              $.ajax({
            type: 'POST',
            url: '@Url.Content("~/IssueTables/TypeId")',
                  dataType: 'json',
                  data: { type_name: TypeName},
                  success: function (result) {
                     var data = result;
                      $("#TypeId").empty();
                      for (var i = 0; i < data.length; i++)
                      {
                    $("#TypeId").val(data[i].TypeName)
                      }
                  },
                  error: function (err)
                  {
                console.log(err);
                  }
              });
    };

    $('#btnSave').click(function ()
    {
        debugger
        let list = {};

         list.CategoryId = $('#Category').val();
         list.productId = $('#Product').val();
         list.productText = $('#Product option:selected').text();
         list.CategoryText = $('#Category option:selected').text();
         list.Description = $('#Description').val();
         list.Tax = $('#TaxId').val();
         list.Rate = $('#ItemRate').val();
         list.Quantity = $('#Quantity').val();
         list.Amount = $('#Amount').val();
         list.TaxAmount = $('#TaxAmt').val();;
         list.TotalAmount = $('#TotalAmt').val();;

        list.sNo = sNo;

        $.ajax({
                url: '@Url.Content("~/Issues/savePurchages")',
                type: 'POST',
                  dataType: 'json',
            data: { issueTable: list },
                success: function (result)
                {
                    debugger
                    console.log(result);
                    list.Id = result;
                    lstItems.push(list);
                    console.log(lstItems);
                    bindItems();
                    $('#product').val(0);
                    $('#Category').val(0);
                    $('#Description').val('');
                    $('#ItemRate').val('');
                    $('#Quantity').val('');
                    $('#TaxId').val('');
                    $('#Amount').val('');
                    $('#TaxAmt').val('');
                    $('#TotalAmt').val('');
                    $('#gstAmount').val('');
            },

            error: function (err) {
                console.log(err);
            }
        });
    });

    function bindItems() {
        $('#tblpurchaserequest').empty();
        if (lstItems.length > 0) {
            debugger
            let sNo = 1;
            let grandTotal = 0;
            // let calProPer = 0;
            for (var i = 0; i < lstItems.length; i++) {
                var row = `<tr id=rm${sNo}>`
                    + `<td>${sNo}</td>`
                    + `<td>${lstItems[i].productText}</td>`
                    + `<td>${lstItems[i].CategoryText}</td>`
                    + `<td>${lstItems[i].Tax}</td>`
                    + `<td>${lstItems[i].Description}</td>`
                    + `<td>${lstItems[i].Rate}</td>`
                    + `<td>${lstItems[i].Quantity}</td>`
                    + `<td>${lstItems[i].Amount}</td>`
                    + `<td>${lstItems[i].TaxAmount}</td>`
                    + `<td>${lstItems[i].TotalAmount}</td>`
                    + `<td>

                        <button type="button" class="btn btn-default" onclick="removeTR('${lstItems[i].Id}')">Remove</button>
                        </td>`
                    + "</tr>";

                let amount = 0;



                lstItems[i].TotalAmount != null ? amount = parseFloat(lstItems[i].TotalAmount) : amount = 0;
                grandTotal += amount;

                $('#tblpurchaserequest').append(row);
                sNo++;
            }
            console.log(grandTotal);
            $('#netAmt').val(grandTotal.toFixed());
        }
    }
</script>
