@model issDomain.Models.receiptEntry

@{
    ViewBag.Title = "Edit";
}
<style>
    .header {
        margin-top: 10px;
        border-top-style: solid;
        border-top-width: 5px;
        border-top-color: #FF5F04;
        font-family: Calibri;
        font-size: 22px;
    }

    .btn-default {
        background-color: #FF5F04;
        color: white;
    }

    input, select, textarea {
        max-width: 500px;
    }

    th, td {
        border: 1px solid black;
        text-align: center;
        height: 50px;
    }

    .itemtable th {
        text-align: center;
    }

    select #Product, #TaxId {
        max-width: 500px;
    }

    .example-open .modal-backdrop {
        background-color: transparent;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="panel-group">

        <div class="panel panel-heading header">
            Receipt Entry - Edit Page
        </div>
        <div class="panel panel-body">
            <div class="row">
                <div class="form-group col-md-6">
                    <label>Receipt  ID</label>
                    @Html.EditorFor(model => model.receiptID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.receiptID, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Receipt Date</label>
                    @Html.TextBoxFor(m => m.receiptDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                </div>
                <div class="form-group col-md-6">
                    <label>Payment Type</label>
                    @Html.DropDownList("accountLedgerId", null, htmlAttributes: new { @class = "form-control", @id = "accountLedgerId" })
                    @Html.ValidationMessageFor(model => model.accountLedger, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Project</label>
                    @Html.DropDownList("siteNameId", null, htmlAttributes: new { @class = "form-control", @id = "projectNameId" })
                    @Html.ValidationMessageFor(model => model.siteName.ProjectName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Site Name</label>
                    @Html.DropDownList("siteId", null, htmlAttributes: new { @class = "form-control", @id = "siteNameId" })
                    @Html.ValidationMessageFor(model => model.siteId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Account Ledger Name</label>
                    @Html.DropDownList("LedgerId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LedgerId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Given By</label>
                    @Html.EditorFor(model => model.givenBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.givenBy, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Collected By</label>
                    @Html.EditorFor(model => model.collectBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.collectBy, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Amount</label>
                    @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label>Remarks</label>
                    @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group" style="float:right">
                <input type="submit" value="Save" class="btn btn-default" />
                @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
    <script>
     $(document).ready(function () {

        $("#projectNameId").change(function () {
            var pnameId = $(this).find('option:selected').val();
            siteNameId(pnameId);
        })
    });


    function siteNameId(pnameId)
    {
              $.ajax({
            type: 'POST',
            url: '@Url.Content("~/receiptEntries/siteNameId")',
            dataType: 'json',
                  data: { site_Name_Id: pnameId },
                  success: function (result) {
                      var data = result;
                      $("#siteNameId").empty();
                      for (var i = 0; i < data.length; i++)
                      {
                          $("#siteNameId").append("<option value='" + data[i].ID + "'>" + data[i].SiteName + "</option>");
                }
            },
            error: function (err) {
                console.log(err);
            }
        });
    };

    </script>